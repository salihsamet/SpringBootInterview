buildscript {
	ext {
		springBootVersion = '2.7.2'
	}
	repositories {
		mavenCentral()
		jcenter()
        maven { url "https://repo.spring.io/ui/native/plugins-release" }
        maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('com.github.ksoichiro:gradle-console-reporter:0.6.3')
	}
}

apply plugin: 'java'
apply plugin: "jacoco"
apply plugin: "io.spring.dependency-management"
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.github.ksoichiro.console.reporter'

group = 'com.sample'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
repositories {
    mavenCentral()
}

dependencies {
	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
	implementation('org.springframework.boot:spring-boot-starter')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-data-rest')
	implementation('org.springframework.boot:spring-boot-starter-validation')
	implementation('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
	implementation('org.liquibase:liquibase-core')
	implementation('org.modelmapper:modelmapper:3.1.0')
	runtimeOnly('org.springframework.boot:spring-boot-devtools')
	runtimeOnly('mysql:mysql-connector-java')
	testImplementation('com.h2database:h2')
	testImplementation('org.springframework.boot:spring-boot-starter-aop')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.mockito:mockito-core:2.28.2')
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
	useJUnitPlatform()
}
